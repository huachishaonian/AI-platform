package com.wzp.aiplatform.mapper;

import com.wzp.aiplatform.model.Task;
import com.wzp.aiplatform.model.TaskExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Repository;

@Repository
public interface TaskMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task
     *
     * @mbg.generated Fri Apr 12 16:23:00 CST 2019
     */
    @SelectProvider(type=TaskSqlProvider.class, method="countByExample")
    long countByExample(TaskExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task
     *
     * @mbg.generated Fri Apr 12 16:23:00 CST 2019
     */
    @DeleteProvider(type=TaskSqlProvider.class, method="deleteByExample")
    int deleteByExample(TaskExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task
     *
     * @mbg.generated Fri Apr 12 16:23:00 CST 2019
     */
    @Delete({
        "delete from task",
        "where taskid = #{taskid,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer taskid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task
     *
     * @mbg.generated Fri Apr 12 16:23:00 CST 2019
     */
    @Insert({
        "insert into task (taskname, ",
        "taskshort, tasktype, ",
        "taskdetail)",
        "values (#{taskname,jdbcType=VARCHAR}, ",
        "#{taskshort,jdbcType=VARCHAR}, #{tasktype,jdbcType=INTEGER}, ",
        "#{taskdetail,jdbcType=VARCHAR})"
    })
    int insert(Task record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task
     *
     * @mbg.generated Fri Apr 12 16:23:00 CST 2019
     */
    @InsertProvider(type=TaskSqlProvider.class, method="insertSelective")
    int insertSelective(Task record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task
     *
     * @mbg.generated Fri Apr 12 16:23:00 CST 2019
     */
    @SelectProvider(type=TaskSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="taskid", property="taskid", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="taskname", property="taskname", jdbcType=JdbcType.VARCHAR),
        @Result(column="taskshort", property="taskshort", jdbcType=JdbcType.VARCHAR),
        @Result(column="tasktype", property="tasktype", jdbcType=JdbcType.INTEGER),
        @Result(column="taskdetail", property="taskdetail", jdbcType=JdbcType.VARCHAR)
    })
    List<Task> selectByExample(TaskExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task
     *
     * @mbg.generated Fri Apr 12 16:23:00 CST 2019
     */
    @Select({
        "select",
        "taskid, taskname, taskshort, tasktype, taskdetail",
        "from task",
        "where taskid = #{taskid,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="taskid", property="taskid", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="taskname", property="taskname", jdbcType=JdbcType.VARCHAR),
        @Result(column="taskshort", property="taskshort", jdbcType=JdbcType.VARCHAR),
        @Result(column="tasktype", property="tasktype", jdbcType=JdbcType.INTEGER),
        @Result(column="taskdetail", property="taskdetail", jdbcType=JdbcType.VARCHAR)
    })
    Task selectByPrimaryKey(Integer taskid);

    @Select({
            "select",
            "taskid, taskname, taskshort, tasktype, taskdetail",
            "from task",
            "where taskname = #{taskid,jdbcType=VARCHAR}"
    })
    @Results({
            @Result(column="taskid", property="taskid", jdbcType=JdbcType.INTEGER, id=true),
            @Result(column="taskname", property="taskname", jdbcType=JdbcType.VARCHAR),
            @Result(column="taskshort", property="taskshort", jdbcType=JdbcType.VARCHAR),
            @Result(column="tasktype", property="tasktype", jdbcType=JdbcType.INTEGER),
            @Result(column="taskdetail", property="taskdetail", jdbcType=JdbcType.VARCHAR)
    })
    Task selectByName(String taskname);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task
     *
     * @mbg.generated Fri Apr 12 16:23:00 CST 2019
     */
    @UpdateProvider(type=TaskSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Task record, @Param("example") TaskExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task
     *
     * @mbg.generated Fri Apr 12 16:23:00 CST 2019
     */
    @UpdateProvider(type=TaskSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Task record, @Param("example") TaskExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task
     *
     * @mbg.generated Fri Apr 12 16:23:00 CST 2019
     */
    @UpdateProvider(type=TaskSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Task record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table task
     *
     * @mbg.generated Fri Apr 12 16:23:00 CST 2019
     */
    @Update({
        "update task",
        "set taskname = #{taskname,jdbcType=VARCHAR},",
          "taskshort = #{taskshort,jdbcType=VARCHAR},",
          "tasktype = #{tasktype,jdbcType=INTEGER},",
          "taskdetail = #{taskdetail,jdbcType=VARCHAR}",
        "where taskid = #{taskid,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Task record);
}